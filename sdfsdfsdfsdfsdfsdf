 public class PeaceCard extends Card{
    @Override public boolean winner(Card b){
        boolean re=true;
	if(this.cardValue > b.cardValue)
		re=false;
	else if((this.cardValue == b.cardValue)&&(this.suitValue > b.suitValue))
		re=false;
	return re;
    
    }

}
  public class PeaceDeck extends Deck {
	
	public PeaceDeck() {
       for(int i=1;i<14;i++)//initial a deck of card
	    for(int j=1;j<5;j++){
		deckOfCard[i][j]= new PeaceCard();
		deckOfCard[i][j].cardValue=i;
		deckOfCard[i][j].suitValue=j;
	}

	}

}

public class  MainDriverPeace {
public static void main(String[] args) {
    PeaceDeck myDeck=new PeaceDeck(), yourDeck= new PeaceDeck();
    Card myCard,yourCard;
		int iWin=0, yWin=0;
		
		for(int i=0;i<52;i++){
			System.out.println(i+1 +":");
			myCard = myDeck.draw();
			System.out.println("my card: "+myCard.toString());
			yourCard = yourDeck.draw();
			System.out.println("your card: "+yourCard.toString());
			
			if(myCard.winner(yourCard)){
				System.out.println("I win!");
				iWin++;
			}
			else {
				System.out.println("U win!\n");
				yWin++;
			}			
		}
		System.out.println("my wins: "+ iWin);
		System.out.println("your wins: "+ yWin);
		if(iWin>yWin)
			System.out.println("I win the game!");
		else if(iWin<yWin)
			System.out.println("You win the game!");
		else
			System.out.println("Tie!");

}
}



 class PeaceCard extends Card{
     
    @Override public boolean winner(Card b){
        boolean re=true;
	if(this.cardValue > b.cardValue)
		re=false;
	else if((this.cardValue == b.cardValue)&&(this.suitValue > b.suitValue))
		re=false;
	return re;
    
    }

}
  class PeaceDeck extends Deck {
	PeaceCard[][] deckOfCard= new PeaceCard[14][5];//1~13,1~4
	 public PeaceDeck() {
       for(int i=1;i<14;i++)//initial a deck of card
	    for(int j=1;j<5;j++){
		deckOfCard[i][j]= new PeaceCard();
		deckOfCard[i][j].cardValue=i;
		deckOfCard[i][j].suitValue=j;
       }
     }

         public PeaceCard draw(){
	 PeaceCard cardDraw= new PeaceCard();
	 
	 int valueIndex = new Random().nextInt(13)+1;//draw a random card.
	 int suitIndex = new Random().nextInt(4)+1;
	 
	 while( deckOfCard[valueIndex][suitIndex].suitValue == 0){ //to check if this card is in the deck or not
		  valueIndex = new Random().nextInt(13)+1;//draw another card.
		  suitIndex = new Random().nextInt(4)+1;
	 }
	 cardDraw.cardValue = deckOfCard[valueIndex][suitIndex].cardValue;//assign the value of the drew card into the Card instance
	 cardDraw.suitValue = deckOfCard[valueIndex][suitIndex].suitValue;
	
	 deckOfCard[valueIndex][suitIndex].cardValue=0;//mark the drew card's value and suit with zero in the deck, 
	 deckOfCard[valueIndex][suitIndex].suitValue=0;//make sure this card won't show up anymore
	 return cardDraw;	 
}
	

}

 class Rextester
{ 
public static void main(String[] args) {
    PeaceDeck myDeck=new PeaceDeck(), yourDeck= new PeaceDeck();
    Card myCard,yourCard;
		int iWin=0, yWin=0;
		/*
		for(int i=0;i<52;i++){
			System.out.println(i+1 +":");
			myCard = myDeck.draw();
			System.out.println("my card: "+myCard.toString());
			yourCard = yourDeck.draw();
			System.out.println("your card: "+yourCard.toString());
			
			if(myCard.winner(yourCard)){
				System.out.println("I win!");
				iWin++;
			}
			else {
				System.out.println("U win!\n");
				yWin++;
			}			
		}
		System.out.println("my wins: "+ iWin);
		System.out.println("your wins: "+ yWin);
		if(iWin>yWin)
			System.out.println("I win the game!");
		else if(iWin<yWin)
			System.out.println("You win the game!");
		else
			System.out.println("Tie!");
            */
    
   myCard = myDeck.draw();System.out.println("my card: "+myCard.toString());
			yourCard = yourDeck.draw();
			System.out.println("your card: "+yourCard.toString());
     if(myCard.winner(yourCard)){
				System.out.println("I win!");
			
			}
			else {
				System.out.println("U win!\n");
			
			}			
}
}
